<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[简记·思行-SiNZeRo]]></title>
  <link href="http://SiNZeRo.github.io/atom.xml" rel="self"/>
  <link href="http://SiNZeRo.github.io/"/>
  <updated>2013-07-30T19:45:11+08:00</updated>
  <id>http://SiNZeRo.github.io/</id>
  <author>
    <name><![CDATA[SiNZeRo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[LDA and its variants]]></title>
    <link href="http://SiNZeRo.github.io/blog/2013/07/27/lda-and-its-variants/"/>
    <updated>2013-07-27T10:05:00+08:00</updated>
    <id>http://SiNZeRo.github.io/blog/2013/07/27/lda-and-its-variants</id>
    <content type="html"><![CDATA[<p>Found a post that summarized LDA and its variants:</p>

<p><a href="http://hi.baidu.com/ouyanggaoyan/item/5b5c01d4c518871cd78ed0d7#713670-tsina-1-29064-128ff9f28d958dae738be418601ffbcd">Topic Model的分类总结（LDA变种）</a></p>

<p>A more comprehensive bibliography is below, this page is maintained by mimno who is famous researcher in this direction.</p>

<p><a href="http://www.cs.princeton.edu/~mimno/topics.html">Topic Modeling Bibliography</a></p>

<p>People have different focus in this field, the first post is more likely to be written by guys who have interests in IR. In contrast, I have more interests on modeling community and STOA inference techniques. Thus, I’m going to summarize paper list according to my interest. :)</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Priors and Smoothing of LDA]]></title>
    <link href="http://SiNZeRo.github.io/blog/2013/07/26/priors-and-smoothing-of-lda/"/>
    <updated>2013-07-26T11:53:00+08:00</updated>
    <id>http://SiNZeRo.github.io/blog/2013/07/26/priors-and-smoothing-of-lda</id>
    <content type="html"><![CDATA[<h1 id="on-smoothing-and-inference-for-topic-models">1. On Smoothing and Inference for Topic Models</h1>

<p>强烈推荐大家看这篇, 这篇讲的东西，应该可以理清很多人的疑问。</p>

<h2 id="plsalda">这篇里提到了PLSA和LDA的关系</h2>

<blockquote>

  <pre><code>Exact inference (i.e. computing the posterior over the hidden
variables) for this model is intractable [Blei et al.,2003], and
so a variety of approximate algorithms have been developed. If
we ignore α and η and treat θkj and φwk as parameters, we obtain
the PLSA model, and maximum likelihood (ML) estimation over θkj
and φwk directly corresponds to PLSA’s EM algorithm.
</code></pre>
</blockquote>

<p>意思就是如果 <code>1. 不假设先验</code> 或者 2. 假设 $ \alpha=\beta=1 $ , 那么<code>LDA</code>就是<code>PLSA</code>模型。并且，木有先验的话，就没有所谓的 <code>bayesian inference </code>和 <code>MAP</code> 的说法了。求参数$\theta, \phi$的过程就和<code>PLSA</code>的<code>EM Algorithm</code>一样的了。</p>

<h2 id="lda-inference">比较了计算LDA inference的方法</h2>

<ol>
  <li>Variational Bayesian (VB)</li>
  <li>Collapsed VB</li>
  <li>MAP (EM Elgorithm)</li>
  <li>CVB0</li>
  <li>Collapsed Gibbs Sampling(CGS)</li>
</ol>

<p>文中主要着重介绍了几点</p>

<ol>
  <li>这几个方法都很依赖调参数，调参数可以手工设一个固定值，或者用<code>Minka fixed point</code>,或者<code>grid search</code></li>
  <li>表示在适当的参数的情况下，这几个方式的求解过程是相似的。并且给出了对应参数之间的关系。比如, MAP的 <code>prior</code>要比其他的多加 + 1 (要不会负的概率)之类的。</li>
  <li>表示认真的调了参数之后，这几个方法结果的好坏，差距没有那么大。</li>
  <li>当然最好的还是CVB0和Collapsed Gibbs Sampling. 后者多拿出几个Sampling出来平均效果更好。</li>
  <li>CVB0是 determinstic 的，所以收敛的比 CGS 快一些。</li>
  <li>MAP居然是并行化的保障的</li>
</ol>

<blockquote>

  <pre><code>The updates in MAP estimation can be performed
in parallel without affecting the fixed point since
MAP is an EM algorithm [Neal and Hinton, 1998]
</code></pre>
</blockquote>

<!-- more -->

<h1 id="rethinking-lda--why-priors-matter">2. Rethinking LDA : Why Priors Matter，</h1>

<p>今天看了一篇文章叫Rethinking LDA : Why Priors Matter，主要讲 LDA里 symmetric prior 和 asymmetric prior 对结果的影响。</p>

<h2 id="as-prior">最终表示 AS 这种类型的prior效果比较好。</h2>

<p>此处，Symmetric prior 是$T$维的dirichlet prior全部取一直值。</p>

<p>AS 是指2个参取不同类型的prior.</p>

<ol>
  <li>document specific topic distribution $\theta$ 的 prior $\alpha$ 取为 symmetric prior</li>
  <li>topic word distribution $\phi$ 的prior $\beta$ 取为 asymmetric prior, 具体 asymmetric prior 的形式可以参考论文</li>
</ol>

<h2 id="phi-prior">$ \phi $的prior</h2>

<p>最早的时候blei大叔是不给这个参数加prior，加prior的是04的年griffiths大叔。</p>

<p>通过blei的 variational inference 出来的应该就是 asymmetric topic word distribution, 不懂为啥后来又给加了  symmetric prior，然后又给整成了 asymmetric prior. </p>

<p>通过修改成asymmetric prior, graphical model 确实是增加了一层的节点，当然如果把这层给 marginalize 掉就成为了另外一种的prior, 就不是原先的 dirichlet 假设。</p>

<p>最后作者表示实验效果好呀，实验效果好。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Latex Test]]></title>
    <link href="http://SiNZeRo.github.io/blog/2013/07/26/latex-test/"/>
    <updated>2013-07-26T11:15:00+08:00</updated>
    <id>http://SiNZeRo.github.io/blog/2013/07/26/latex-test</id>
    <content type="html"><![CDATA[<p>Google means $10^{100}$</p>

<p>A Cross Product Formula</p>

<script type="math/tex; mode=display">% &lt;![CDATA[

\mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix}
\mathbf{i} & \mathbf{j} & \mathbf{k} \\\
\frac{\partial X}{\partial u} &  \frac{\partial Y}{\partial u} & 0 \\\
\frac{\partial X}{\partial v} &  \frac{\partial Y}{\partial v} & 0
\end{vmatrix}
 %]]&gt;</script>

<p>The probability of getting $k$ heads when flipping $n$ coins is</p>

<script type="math/tex; mode=display">
P(E(n,k);p) = {n \choose k} p^k (1-p)^{ n-k}
</script>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress-配置]]></title>
    <link href="http://SiNZeRo.github.io/blog/2013/07/20/octopress-configuration/"/>
    <updated>2013-07-20T20:27:00+08:00</updated>
    <id>http://SiNZeRo.github.io/blog/2013/07/20/octopress-configuration</id>
    <content type="html"><![CDATA[<p>教程到处都是，所以我就给一些建议吧。
似乎这个东西的更新很快，所以我就说下我是2013/7/20配置的。这个时候的各个东西的版本如下。</p>

<ol>
  <li>ruby的版本一定要装<code>1.9.3</code></li>
  <li>ruby devkit 我装的是 <a href="https://github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe">DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe</a></li>
  <li>然后几乎按着教程走就可以了。</li>
  <li>本地的库，最好直接用Dropbox保存。免得迁入迁出什么的麻烦。</li>
  <li>修改主题的时候记得在.themes里改模板。（其实我也不确定，但是这么做不至于换主题的时候被覆盖掉）</li>
  <li>为了避免中文问题和配置上的麻烦请使用<code>kramdown</code>替换<code>rdiscount</code></li>
</ol>

<ul>
  <li>安装 kramdown
<code>gem install kramdown</code></li>
  <li>_config.yml里替换
<code>markdown: rdiscount</code>
为
<code>markdown: kramdown</code></li>
</ul>

<h2 id="section">参考</h2>

<p><a href="http://never.doubting.me/2013/04/18/2013-04-18-setup-octopress-on-github-step-by-step/">教程:一步步在github上建立octopress博客</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DBLP_plugin]]></title>
    <link href="http://SiNZeRo.github.io/blog/2013/07/20/dblp-plugin/"/>
    <updated>2013-07-20T11:43:00+08:00</updated>
    <id>http://SiNZeRo.github.io/blog/2013/07/20/dblp-plugin</id>
    <content type="html"><![CDATA[
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>- dblp_plugin.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
</pre></td><td class="code"><pre><code class="js"><span class="line"><span class="kd">var</span> <span class="nx">script</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">);</span>
</span><span class="line"><span class="nx">script</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="s2">&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js&quot;</span><span class="p">;</span>
</span><span class="line"><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;head&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">script</span><span class="p">);</span>
</span><span class="line"><span class="nx">script</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">venue_list</span> <span class="o">=</span> <span class="nb">Array</span><span class="p">();</span>
</span><span class="line">    <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#autocomplete_F_boxes_2_body .box_line&quot;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class="line">        <span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;.hits_number&quot;</span><span class="p">);</span>
</span><span class="line">        <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;&amp;lt;INPUT type=&#39;checkbox&#39; class=&#39;venue_check&#39;&amp;gt;&amp;lt;/input&amp;gt;&quot;</span><span class="p">).</span><span class="nx">insertAfter</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span>
</span><span class="line">    <span class="p">});</span>
</span><span class="line">    <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.venue_check&#39;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class="line">        <span class="kd">var</span> <span class="nx">venue_name</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">parent</span><span class="p">().</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;.completion_link&#39;</span><span class="p">).</span><span class="nx">text</span><span class="p">();</span>
</span><span class="line">        <span class="kd">var</span> <span class="nx">default_venue_list</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;KDD&quot;</span><span class="p">,</span> <span class="s1">&#39;WWW&#39;</span><span class="p">,</span> <span class="s1">&#39;ICDM&#39;</span><span class="p">,</span> <span class="s1">&#39;SDM&#39;</span><span class="p">,</span> <span class="s1">&#39;VLDB&#39;</span><span class="p">,</span> <span class="s1">&#39;CIKM&#39;</span><span class="p">];</span>
</span><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span><span class="nx">venue_name</span><span class="p">,</span><span class="nx">default_venue_list</span><span class="p">)</span><span class="o">&amp;</span><span class="nx">gt</span><span class="p">;</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">            <span class="nx">venue_list</span><span class="p">[</span><span class="nx">venue_name</span> <span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">            <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;checked&#39;</span><span class="p">,</span><span class="s1">&#39;true&#39;</span><span class="p">);</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">    <span class="p">});</span>
</span><span class="line">    <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.venue_check&#39;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class="line">        <span class="kd">var</span> <span class="nx">venue_name</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">parent</span><span class="p">().</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;.completion_link&#39;</span><span class="p">).</span><span class="nx">text</span><span class="p">();</span>
</span><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;checked&quot;</span><span class="p">)){</span>
</span><span class="line">            <span class="nx">venue_list</span><span class="p">[</span><span class="nx">venue_name</span> <span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">        <span class="k">else</span>
</span><span class="line">        <span class="p">{</span>
</span><span class="line">            <span class="nx">venue_list</span><span class="p">[</span><span class="nx">venue_name</span> <span class="p">]</span><span class="o">=</span><span class="kc">undefined</span><span class="p">;</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">        <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#autocomplete_H_boxes_1_body table tr&quot;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class="line">            <span class="k">if</span> <span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;th&#39;</span><span class="p">).</span><span class="nx">size</span><span class="p">()</span><span class="o">&amp;</span><span class="nx">gt</span><span class="p">;</span><span class="mi">0</span><span class="p">)</span> <span class="p">{</span><span class="k">return</span> <span class="p">;}</span>
</span><span class="line">            <span class="kd">var</span> <span class="nx">match_flag</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class="line">            <span class="k">for</span> <span class="p">(</span><span class="nx">x</span> <span class="k">in</span> <span class="nx">venue_list</span><span class="p">){</span>
</span><span class="line">                <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">venue_list</span><span class="p">[</span><span class="nx">x</span><span class="p">])</span> <span class="k">continue</span><span class="p">;</span>
</span><span class="line">                <span class="k">if</span> <span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">text</span><span class="p">().</span><span class="nx">match</span><span class="p">(</span><span class="nx">x</span><span class="p">)){</span>
</span><span class="line">                    <span class="nx">match_flag</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class="line">                <span class="p">}</span>
</span><span class="line">            <span class="p">}</span>
</span><span class="line">            <span class="k">if</span> <span class="p">(</span><span class="o">!</span> <span class="nx">match_flag</span> <span class="p">)</span> <span class="p">{</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">hide</span><span class="p">();}</span><span class="k">else</span> <span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">show</span><span class="p">());</span>
</span><span class="line">        <span class="p">});</span>
</span><span class="line">    <span class="p">});</span>
</span><span class="line"><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[简行之始]]></title>
    <link href="http://SiNZeRo.github.io/blog/2013/07/20/my-first-blog/"/>
    <updated>2013-07-20T10:57:00+08:00</updated>
    <id>http://SiNZeRo.github.io/blog/2013/07/20/my-first-blog</id>
    <content type="html"><![CDATA[<p>0</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[刷Toefl(Ibt)考位程序(Demo)]]></title>
    <link href="http://SiNZeRo.github.io/blog/2011/08/11/shua-toefl-ibt-kao-wei-cheng-xu-demo/"/>
    <updated>2011-08-11T17:12:00+08:00</updated>
    <id>http://SiNZeRo.github.io/blog/2011/08/11/shua-toefl-ibt-kao-wei-cheng-xu-demo</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://SiNZeRo.github.io/images/post/2013/07/p2_ibtq1.png" /></p>

<p>界面暂时是这个样子的，亲。
因为要查询多个考场并且服务器有最短查询间隔 和 Cookie超市。所以写了一个简单Task Schedule去保证任务正常执行。反正各种乱搞。
不过现在各种依赖调试信息。等真的刷到位子了。我就发布 完整的程序。
貌似之前的 iBt刷考位程序都是不需要登陆的。现在的果断的需要登陆了。</p>

]]></content>
  </entry>
  
</feed>
